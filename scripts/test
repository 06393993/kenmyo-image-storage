#!/usr/bin/env node
const { promisify } = require('util');
const { spawn } = require('child_process');

const runTests = {
    unit: async () => {
        await new Promise((resolve, reject) => {
            const p = spawn('bash',
                [
                    '-c',
                    'npx ts-mocha --colors `find src/ -name \'*.test.ts\'`',
                ],
                {
                    env: {
                        'KENMYO_ENV': 'TEST:UNIT',
                    },
                    stdio: [
                        'inherit',
                        'inherit',
                        'inherit',
                    ],
                },
                (err) => {
                    if(err) {
                        reject(err);
                        return;
                    }
                    resolve();
                }
            );
        });
    },
    integrate: async () => {
        await new Promise((resolve, reject) => {
            const p = spawn('bash',
                [
                    '-c',
                    'npx ts-mocha --colors --timeout 20000 `find test/ -name \'*.test.ts\'`',
                ],
                {
                    stdio: [
                        'inherit',
                        'inherit',
                        'inherit',
                    ],
                    env: {
                        KENMYO_ENV: 'TEST:LOCAL_INTEGRATE',
                        ...process.env,
                    },
                },
                (err) => {
                    if(err) {
                        reject(err);
                        return;
                    }
                    resolve();
                }
            );
        });
    },
};

async function main() {
    const testType = process.argv[2] || "unit";
    console.log(`running ${testType} test...`);
    const runTest = runTests[testType];
    if(!runTest) {
        console.error(`undefined test type: ${testType}`);
        process.exit(0x7f);
    }
    await runTest();
}

main().catch((err) => {
    console.error(err.message);
});
